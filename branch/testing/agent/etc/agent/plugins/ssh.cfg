;; ssh
;; plugin_id: 4003
;; type: detector 
;; description: Ssh (Secure Shell) is a program for logging into a remote machine
;;              and for executing commands on a remote machine.
;; URL: http://www.openssh.com
;;
;; $Id: ssh.cfg,v 1.12 2010/03/23 16:42:18 juanmals Exp $

[DEFAULT]
plugin_id=4003

# default values for dst_ip and dst_port
# they can be overwritten in each rule
dst_ip=\_CFG(plugin-defaults,sensor)
dst_port=22

[config]
type=detector
enable=yes

source=log
location=/var/log/auth.log

# create log file if it does not exists, 
# otherwise stop processing this plugin
create_file=false

process=sshd
start=no   
stop=no
startup=/etc/init.d/ssh start
shutdown=/etc/init.d/ssh stop

exclude_sids=98

[translation]
Version=22
Throughput=23
password=1
none=1
publickey=2
opened=25
closed=26

## rules

##
## Failed login attempts
##

[01 - Failed password]
#Feb  8 10:09:06 golgotha sshd[24472]: Failed password for dgil from 192.168.6.69 port 33992 ssh2
#Mar 29 11:17:52 opensourcesim sshd[11685]: Failed none for invalid user test tester from 19.80.11.24 port 42371 ssh2
#Mar 17 17:28:03 opensourcesim sshd[16689]: Failed password for invalid user user from 1.121.101.94 port 39792 ssh2
#Jan 13 05:48:12 spcp1appfac01 sshd[25796]: Failed password for invalid user jboss from 3.73.29.32 port 52736 ssh2
#Sep 15 11:29:17 devel-host sshd[18163]: Failed publickey for invalid user fred from 192.168.2.2 port 62788 ssh2 
#Oct 18 12:56:39 www1 sshd[9140]: Failed password for pcatalina from 87.216.160.114 port 53271 ssh2
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<dst>\S+).*ssh.*Failed (?P<type>publickey|password|none) for\s+(?P<info>invalid user)?\s*(?P<user>\S+)\s.*from\s+(?P<src>\S+)\s.*port\s+(?P<sport>\d{1,5})"
plugin_sid={translate($type)}
date={normalize_date($date)}
src_ip={resolv($src)}
dst_ip={resolv($dst)}
src_port={$sport}
username={$user}
userdata1={$info}
userdata2={$dst}

[02 - Invalid user]
#Sep  6 11:04:02 ossim-devel sshd[6983]: Invalid user test123 from 10.222.14.27
#Oct  2 23:58:41 ks213611 sshd[15638]: Invalid user minecraft from 20.18.31.8
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<dst>\S+)\s.*ssh.*Invalid user (?P<user>\S+) from\s+(?P<src>\S+)"
plugin_sid=3
date={normalize_date($date)}
src_ip={resolv($src)}
dst_ip={resolv($dst)}
username={$user}

[03 - Illegal user]
# Jan  7 16:36:07 hostname sshd[25119]: Illegal user rolo from 192.168.2.1 
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<dst>\S+)\s.*ssh.*Illegal user (?P<user>\S+) from\s+(?P<src>\S+)"
plugin_sid=4
date={normalize_date($date)}
src_ip={resolv($src)}
dst_ip={resolv($dst)}
username={$user}

[04 - Root login refused]
# Jan  15 01:32:01 ossim-devel sshd[1222]: ROOT LOGIN REFUSED FROM 10.222.3.41
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<dst>\S+)\s.*ssh.*Root login refused from\s+(?P<src>\S+)"
plugin_sid=5
date={normalize_date($date)}
src_ip={resolv($src)}
dst_ip={resolv($dst)}
username=root

[05 - User not allowed because account is locked]
# Sep  6 11:04:02 ossim-devel sshd[6983]: User piedrahita not allowed because account is locked
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<dst>\S+)\s.*ssh.*User (?P<user>\S+) not allowed because account is locked"
plugin_sid=13
date={normalize_date($date)}
username={$user}
dst_ip={resolv($dst)}

[06 - User not allowed because listed]
#Sep  6 11:04:02 ossim-devel sshd[6983]: User piedrahita not allowed because listed in DenyUsers
#Oct 17 16:19:47 mitronete sshd[22541]: User test from avtraining.mad.alienvault.net not allowed because a group is listed in DenyGroups
#Oct 17 16:21:51 mitronete sshd[22585]: User test from avtraining.mad.alienvault.net not allowed because not listed in AllowUsers
#Oct 17 16:25:41 mitronete sshd[22620]: User test from avtraining.mad.alienvault.net not allowed because none of user's groups are listed in AllowGroups
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<dst>\S+)\s.*ssh.*User (?P<user>\S+)\s(from\s+(?P<src>\S+)\s+)?not allowed because (?P<info>.*)"
plugin_sid=6
date={normalize_date($date)}
username={$user}
dst_ip={resolv($dst)}
src_ip={resolv($src)}
userdata1={$info}

[07 - Authentication refused]
#Nov 15 14:21:49 128.1.4.9 sshd[1343672]: Authentication refused: bad ownership or modes for file /home/user/.sshauthorized_keys
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<dst>\S+)\s.*ssh.*Authentication refused:\s*(?P<info>.*)"
plugin_sid=12
date={normalize_date($date)}
dst_ip={resolv($dst)}
userdata1={$info}

##
## Succesfull login attempts
##

[08 - Login sucessful (Accepted password)]
# Sep  6 10:51:04 ossim-devel sshd[6379]: Accepted password for dgil from 10.222.14.12 port 33232 ssh2
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<dst>\S+)\s.*ssh.*Accepted password for (?P<user>\S+)\s.*from\s+(?P<src>\S+)\s.*port\s+(?P<sport>\d{1,5})"
plugin_sid=7
date={normalize_date($date)}
src_ip={resolv($src)}
dst_ip={resolv($dst)}
src_port={$sport}
username={$user}

[09 - Login sucessful (Accepted publickey)]
# Sep  5 19:07:51 lolita sshd[14206]: Accepted publickey for alopezp from 195.235.*.* port 45602 ssh2
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<dst>\S+)\s.*ssh.*Accepted publickey for (?P<user>\S+)\s.*from\s+(?P<src>\S+)\s.*port\s+(?P<sport>\d{1,5})"
plugin_sid=8
date={normalize_date($date)}
src_ip={resolv($src)}
dst_ip={resolv($dst)}
src_port={$sport}
username={$user}

##
## Other
##
[10 - Bad protocol version identification]
# Sep  5 05:01:07 lolita sshd[18931]: Bad protocol version identification '\\026\\003' from 208.32.22.22
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<dst>\S+)\s.*ssh.*Bad protocol version identification (?P<version>.*)from (?P<src>\S+)"
plugin_sid=9
date={normalize_date($date)}
src_ip={resolv($src)}
dst_ip={resolv($dst)}
userdata1={$version}

[11 - Did not receive identification string]
#Sep  5 05:01:07 lolita sshd[3083]: Did not receive identification string from 192.157.2.2
#Jan 12 02:52:11 ssdfasdaasdfc01 sshd[31147]: Did not receive identification string from 1.2.29.19
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<dst>\S+)\s.*ssh.*Did not receive identification string from (?P<src>\S+)"
plugin_sid=10
date={normalize_date($date)}
src_ip={resolv($src)}
dst_ip={resolv($dst)}

[12 - Refused connect]
#Jan 15 11:58:03 opensourcesim sshd[21212]: refused connect from 192.168.10.1
#Feb  5 05:00:08 morion sshd[20926]: refused connect from **.172.200.198 (**.172.200.198)
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<dst>\S+).*ssh.*refused connect from\s(?P<src>\S+)"
plugin_sid=19
date={normalize_date($date)}
src_ip={resolv($src)}
dst_ip={resolv($dst)}

[13 - Received disconnect]
#Nov 15 11:55:35 130.1.4.9 sshd[1769702]: Received disconnect from 172.21.11.134: 11: Disconnect requested by Windows SSH Client.
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<dst>\S+)\s.*ssh.*Received disconnect from (?P<src>\S+):\s(?P<info>.*)"
plugin_sid=11
date={normalize_date($date)}
src_ip={resolv($src)}
dst_ip={resolv($dst)}
userdata1={$info}

[14 - PAM X more authentication failures]
#Oct  2 18:55:30 wow sshd[11760]: PAM 1 more authentication failure; logname= uid=0 euid=0 tty=ssh ruser= rhost=213.37.174.35.dyn.user.ono.com  user=test
#Aug 14 19:30:47 ossim sshd[16178]: PAM 2 more authentication failures; logname= uid=0 euid=0 tty=ssh ruser= rhost=192.168.169.129  user=test
#Oct  4 10:45:45 ks213611 sshd[26330]: PAM 5 more authentication failures; logname= uid=0 euid=0 tty=ssh ruser= rhost=125.134.208.74  user=root
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<dst>\S+)\s.*ssh.*PAM (?P<times>\d+) more authentication failures?; logname=(?P<log>\S*) uid=(?P<uid>\S*) euid=(?P<euid>\S*) tty=(?P<tty>\S*) ruser=(?P<ruser>\S*) rhost=(?P<src>\S+)\s+user=(?P<user>\S+)"
plugin_sid=14
date={normalize_date($date)}
dst_ip={resolv($dst)}
src_ip={resolv($src)}
username={$user}
filename={$log}
userdata1={$times}
userdata2={$uid}
userdata3={$euid}
userdata4={$tty}
userdata5={$ruser}

# At pam_unix.cfg
#[15 - authentication failures]
##Oct  5 19:36:21 ks213611 sshd[27170]: pam_unix(sshd:auth): authentication failure; logname= uid=0 euid=0 tty=ssh ruser= rhost=190.91.126.187  user=root
##Oct  3 00:00:32 ks213611 sshd[19360]: pam_unix(sshd:auth): authentication failure; logname= uid=0 euid=0 tty=ssh ruser= rhost=ninjabox-ext.cs.bell-labs.com  user=root
##Oct 11 18:45:31 www1 sshd[22850]: pam_unix(sshd:auth): authentication failure; logname= uid=0 euid=0 tty=ssh ruser= rhost=87.216.160.114  user=pcatalina
#event_type=event
#regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<dst>\S+)\s.*ssh.* authentication failure; logname=(?P<log>\S*) uid=(?P<uid>\S*) euid=(?P<euid>\S*) tty=(?P<tty>\S*) ruser=(?P<ruser>\S*) rhost=(?P<src>\S+)\s+user=(?P<user>\S+)"
#plugin_sid=24
#date={normalize_date($date)}
#dst_ip={resolv($dst)}
#src_ip={resolv($src)}
#username={$user}
#filename={$log}
#userdata1={$uid}
#userdata2={$euid}
#userdata3={$tty}
#userdata4={$ruser}

[16 - Reverse mapping failed]
#Jan 14 23:17:47 opensourcesim sshd[24026]: reverse mapping checking getaddrinfo for corporat190-024129008.sta.etb.net.co [190.24.129.8] failed - POSSIBLE BREAK-IN ATTEMPT!
#Oct  3 15:38:09 ks213611 sshd[9820]: reverse mapping checking getaddrinfo for 190-176-128-171.speedy.com.ar [190.176.128.171] failed - POSSIBLE BREAK-IN ATTEMPT!
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<dst>\S+)\s.*ssh.*reverse mapping checking getaddrinfo for\s(?P<a_map>\S+)\s\[(?P<src>\S+)\]"
plugin_sid=15
date={normalize_date($date)}
src_ip={resolv($src)}
dst_ip={resolv($dst)}
userdata1={$a_map}

[17 - Address not mapped]
#Jan 14 08:07:46 opensourcesim sshd[21128]: Address 64.151.123.165 maps to 64.151.123.165.servepath.com, but this does not map back to the address - POSSIBLE BREAK-IN ATTEMPT!
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<dst>\S+)\s.*ssh.*Address\s(?P<src>\S+)\smaps to\s(?P<a_map>\S+),"
plugin_sid=16
date={normalize_date($date)}
src_ip={resolv($src)}
dst_ip={resolv($dst)}
userdata1={$a_map}

[18 - Server listening - Daemon started]
#Jan 12 01:15:58 opensourcesim sshd[2479]: Server listening on 0.0.0.0 port 22.
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<dst>\S+)\s.*ssh.*Server listening on\s(?P<src>\S+)\sport\s(\?P<d_port>\d{1,5})"
plugin_sid=17
date={normalize_date($date)}
src_ip={resolv($src)}
dst_ip={resolv($dst)}
dst_port={$d_port}

[19 - Server terminated - Daemon stopped]
#Jan 15 11:58:03 opensourcesim sshd[2479]: Received signal 15; terminating.
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<dst>\S+)\s.*ssh.*Received signal\s(?P<signal>\d+)"
plugin_sid=18
date={normalize_date($date)}
dst_ip={resolv($dst)}
userdata1={$signal}

[20 - Denied connection]
#Jan 15 11:58:03 opensourcesim sshd[21212]: Denied connection from by 192.168.10.1 tcp wrappers
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<dst>\S+)\s.*ssh.*Denied connection from by\s(?P<src>\S+)"
plugin_sid=20
date={normalize_date($date)}
src_ip={resolv($src)}
dst_ip={resolv($dst)}

[21 - Could not get shadow information]
#Jan 13 05:48:05 spasdfasc01 sshd[25794]: error: Could not get shadow information for NOUSER
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<dst>\S+)\s.*ssh.*Could not get shadow information for\s+(?P<user>\S*)"
plugin_sid=21
date={normalize_date($date)}
username={$user}
dst_ip={resolv($dst)}

[22 - Recieved connection]
#Jan 13 10:33:59 hpux01 sshd[26224]: SSH: Server;Ltype: Version;Remote: 12.15.1.1-55446;Protocol: 1.5;Client: OpenSSH_3.7.1p2-host01
#Jan 13 10:37:49 hpux01 sshd[28294]: SSH: Server;LType: Throughput;Remote: 12.15.1.1-61846;IN: 7712;OUT: 1648;Duration: 9.9;tPut_in: 780.6;tPut_out: 166.8
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<dst>\S+)\s.*ssh.*Server.*(Ltype|LType):\s+(?P<sid>[^;]+).*Remote:\s+(?P<src>\S+)-(?P<port>\d{1,5})"
plugin_sid={translate($sid)}
date={normalize_date($date)}
src_ip={resolv($src)}
src_port={$port}
dst_ip={resolv($dst)}

[23 - Login sucessful (Accepted password)]
# Jan 13 09:49:16 hpux01 sshd[3231]: Accepted keyboard-interactive/pam for username from 12.15.1.1 port 54911
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<dst>\S+)\s.*ssh.*Accepted keyboard-interactive.* for\s+(?P<user>\S+)\s.*from\s+(?P<src>\S+)\s.*port\s+(?P<port>\d{1,5})"
plugin_sid=7
date={normalize_date($date)}
src_ip={resolv($src)}
dst_ip={resolv($dst)}
src_port={$sport}
username={$user}

# At pam_unix.cfg
#[25 - ssh pam session status]
##Oct 13 13:05:01 www1 sshd[4901]: pam_unix(sshd:session): session opened for user obovt by (uid=0)
##Oct 13 13:09:26 www1 sshd[4901]: pam_unix(sshd:session): session closed for user obovt
#event_type=event
#regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<dst>\S+).*ssh.*session\s+(?P<status>\S+)\sfor user\s+(?P<user>\S+)"
#plugin_sid={translate($status)}
#date={normalize_date($date)}
#dst_ip={resolv($dst)}
#username={$user}

[27 - Conection closed ]
# Dec 18 01:33:53 serv2 sshd[32420]: Connection closed by 10.50.50.1
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<dst>\S+)\s.*ssh.*Connection closed by\s+(?P<src>)"
plugin_sid=27
date={normalize_date($date)}
dst_ip={resolv($dst)}
src_ip={resolv($src)}

[98-ssh - PAM generic rule]
# Nov 15 11:55:35 11.1.4.9 sshd[1769702]: **********
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<dst>\S+).*sshd?\[\d+\]:.*pam_unix.*"
plugin_sid=98
date={normalize_date($date)}
dst_ip={resolv($dst)}
src_ip="0.0.0.0"

[99-ssh - Generic rule]
# Nov 15 11:55:35 11.1.4.9 sshd[1769702]: **********
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<dst>\S+).*sshd?\[\d+\]:"
plugin_sid=99
date={normalize_date($date)}
dst_ip={resolv($dst)}
src_ip="0.0.0.0"
