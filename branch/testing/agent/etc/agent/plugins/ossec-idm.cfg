;; ossec-idm
;; plugin_id=50003 # dummy ID, currently not used by the system
;; type: idm 
;; description: Plugin to parse the OSSEC data for IDM content

[DEFAULT]
plugin_id=50003

[config]
type=detector
enable=yes

source=log
location=/var/ossec/logs/alerts/alerts.log

# create log file if it does not exists,
# otherwise stop processing this plugin
create_file=false

process=
start=
stop=
restart=no
restart_interval=
startup=
shutdown=

exclude_sids=1

# windows OSSEC - Exclude generic users
[OSSEC - IDM 00]
event_type=idm-event
regexp="Alert.*\n(?P<date_header>\d+\s+\w+\s+\d+\s+\d+:\d+:\d+)\s(\((?P<agent_name>.*)\)\s)?(?P<agent_ip>.*)->.*\nRule:\s+(?P<sid>\d+).*\'(?P<msg>.*)\'\nSrc\sIP:\s(?P<sip>.*)\nUser:\s(?P<user>(.*(SYSTEM|SERVICE|system|service|NULL|null|NONE|none).*))\nWinEvtLog:\sSecurity.*AUDIT.*:.*:.*:\s(?P<domain>.*):\s(?P<hostname>.*):\s(?P<msg_alert>.*)\n"
plugin_sid=1

# windows OSSEC - Logon events
[OSSEC - IDM 01]
event_type=idm-event
regexp="Alert.*\n(?P<date_header>\d+\s+\w+\s+\d+\s+\d+:\d+:\d+)\s(\((?P<agent_name>.*)\)\s)?(?P<agent_ip>.*)->.*\nRule:\s+(?P<sid>\d+).*\'(?P<msg>.*)\'\nSrc\sIP:\s(?P<sip>.*)\nUser:\s(?P<user>.*)\nWinEvtLog:\sSecurity.*AUDIT[^:]*:[^:]*:[^:]*:\s(?P<domain>[^:]*):\s(?P<hostname>.*):\s(?P<msg_alert>.*)\n"
username={$user}
hostname={$agent_name}
domain={$domain}
ip={resolv($agent_ip)}

# Unix OSSEC - Exclude generic users
[OSSEC - IDM 02]
event_type=idm-event
regexp="Alert.*\n(?P<date_header>\d+\s+\w+\s+\d+\s+\d+:\d+:\d+)\s(\((?P<agent_name>.*)\)\s)?(?P<agent_ip>.*)->.*\n.*\n.*\n.*\n.*\spam_.*session\sopened\sfor\suser\s+(?P<user_event>(root|mysql|nobody|daemon|system)).*\n"
plugin_sid=1

# Unix OSSEC - Logon events
[OSSEC - IDM 03]
event_type=idm-event
regexp="Alert.*\n(?P<date_header>\d+\s+\w+\s+\d+\s+\d+:\d+:\d+)\s(\((?P<agent_name>.*)\)\s)?(?P<agent_ip>.*)->.*\n.*\n.*\n.*\n.*\spam_.*session\sopened\sfor\suser\s+(?P<user_event>\S+).*\n"
username={$user_event}
hostname={$agent_name}
ip={resolv($agent_ip)}

# Only hostname/agent_name to IP mapping
#[OSSEC - IDM 04]
#event_type=idm-event
#regexp="Alert.*\n(?P<date_header>\d+\s+\w+\s+\d+\s+\d+:\d+:\d+)\s\((?P<agent_name>.*)\)\s?(?P<agent_ip>.*)->.*\n.*New ossec agent connected"
#hostname={$agent_name}
#ip={resolv($agent_ip)}
