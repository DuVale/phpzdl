;; bind
;; plugin_id: 1577
;; 
;;
;; Logging with bind9 using syslog:
;;
;; logging {
;;    channel logger {
;;        syslog local0;
;;        severity info;
;;        print-severity yes;
;;        print-time yes;
;;        print-category yes;
;;    };
;;    channel query_log {
;;        syslog local1;
;;       severity debug 3;
;;        print-severity yes;
;;        print-time yes;
;;        print-category yes;
;;    };
;;    category default{ logger; };
;;    category queries{ query_log; };
;;
;;};


[DEFAULT]
plugin_id=1577
dst_port=53

[config]
type=detector
enable=yes

source=log
location=/var/log/bind.log

# create log file if it does not exists,
# otherwise stop processing this plugin
create_file=false
process=rsyslog
start=no	; launch plugin process when agent starts
stop=no     ; shutdown plugin process when agent stops
#startup=/etc/init.d/%(process)s start
#shutdown=/etc/init.d/%(process)s stop
#restart=yes  ; restart plugin process after each interva
#restart_interval=\_CFG(watchdog,restart_interval) ; interval between each restart

# list of sids (comma separated) to be excluded by the detector
;exclude_sids=1,2,3
[translation]
IN A=51
IN A6=52
IN AAAA=53
IN ANY=54
IN AXFR=55
IN CNAME=56
IN DNSKEY=57
IN DS=58
IN HINFO=59
IN IXFR=61
IN MAILB=62
IN MX=63
IN NAPTR=64
IN NS=65
IN PTR=66
IN RRSIG=67
IN SOA=68
IN SPF=81
IN SRV=69
IN TXT=70
CH TXT=71
started=74
ended=75
adding an RR at=46
deleting an RR=47
deleting rrset at=48
name not in use=49
RRset exists (value dependent)=50
queries=1007
client=1008
config=1009
database=1010
default=1011
delegation-only=1012
dispatch=1013
dnssec=1014
general=78
lame-servers=1016
network=1017
notify=1018
resolver=1019
security=1020
unmatched=1021
update=1022
update-security=1023
xfer-in=1024
xfer-out=1025
notify question=77
received notify=79

[01 - Bind - Query types]
#Oct 23 03:34:43 ns0 named[8986]: 23-Oct-2011 03:34:43.639 queries: info: client 216.230.224.34#64657: query: ns1.ossim.net IN AAAA -EDC (176.9.232.145)
#23-Oct-2011 03:34:43.639 queries: info: client 216.230.224.34#64657: query: ns1.ossim.net IN AAAA -EDC (176.9.232.145)
#Oct 24 19:39:29 ns0 named[16263]: 24-Oct-2011 19:39:29.689 queries: info: client 176.9.232.129#54971: query: ossim.net IN AXFR -ST (176.9.232.145)
#24-Oct-2011 19:39:29.689 queries: info: client 176.9.232.129#54971: query: ossim.net IN AXFR -ST (176.9.232.145)
event_type=event
regexp="(\S+\s+\d+\s+\d\d:\d\d:\d\d\s+(?P<dst>\S+).*\s+)?(?P<date>\d{1,2}-\w{3}-\d{4} \d{2}:\d{2}:\d{2})\.\d+\s+queries: (?P<level>\w+):\s+client\s+(?P<src_ip>\d+.\d+.\d+.\d+)#(?P<src_port>\d+):\s+query: (?P<query_domain>\S+)\s+(?P<query_type>\S+\s\S+).*\((?P<ip_domain>\d+.\d+.\d+.\d+)\)"
date={normalize_date($date)}
src_ip={resolv($src_ip)}
src_port={$src_port}
dst_ip={resolv($dst)}
plugin_sid={translate($query_type)}
userdata1={$level}
userdata2={$query_domain}
userdata3={$ip_domain}

[03 - Bind - Security]
#Oct 25 12:36:19 ns0 named[16263]: 25-Oct-2011 12:36:19.297 security: info: client 180.246.159.224#24633: query (cache) 'ALIENVAULT.COM.S200A2.PSMTP.com/A/IN' denied
#25-Oct-2011 12:36:19.297 security: info: client 180.246.159.224#24633: query (cache) 'ALIENVAULT.COM.S200A2.PSMTP.com/A/IN' denied
event_type=event
regexp="(\S+\s+\d+\s+\d\d:\d\d:\d\d\s+(?P<dst>\S+).*\s+)?(?P<date>\d{1,2}-\w{3}-\d{4} \d{2}:\d{2}:\d{2}).\d+\s+security: (?P<level>\w+):?\s+client\s+(?P<src_ip>\d+.\d+.\d+.\d+)\#(?P<src_port>\d+):\s*(?P<info>.*)"
date={normalize_date($date)}
src_ip={resolv($src_ip)}
src_port={$src_port}
dst_ip={resolv($dst)}
plugin_sid=72
userdata1={$level}
userdata2={$info}

[05 - Bind - Network]
#Oct 23 12:25:53 ns0 named[172]: 23-Oct-2011 12:25:53.267 network: info: listening on IPv4 interface ppp0, 11.4.2.74#53
#Oct 24 19:37:42 ns0 named[172]: 24-Oct-2011 19:37:42.296 network: info: no longer listening on 127.0.0.1#53
event_type=event
regexp="(\S+\s+\d+\s+\d\d:\d\d:\d\d\s+(?P<dst>\S+).*\s+)?(?P<date>\d{1,2}-\w{3}-\d{4} \d{2}:\d{2}:\d{2}).\d+\s+network: (?P<level>\w+):?\s+(?P<info>.*)\, (?P<src_ip>\d+.\d+.\d+.\d+)\#(?P<src_port>\d+)"
date={normalize_date($date)}
src_ip={resolv($src_ip)}
src_port={$src_port}
dst_ip={resolv($dst)}
plugin_sid=73
userdata1={$level}

[07 - Bind - xfer-out]
#Oct 24 10:20:55 ns0 named[172]: 24-Oct-2011 10:20:55.878 xfer-out: info: client 176.9.232.129#58615: transfer of 'alienvault.org/IN': AXFR-style IXFR started: TSIG signed_comms
#Oct 24 10:20:55 ns0 named[172]: 24-Oct-2011 10:20:55.878 xfer-out: info: client 176.9.232.129#58615: transfer of 'alienvault.org/IN': AXFR-style IXFR started: TSIG signed_comms
#Oct 24 10:20:55 ns0 named[172]: 24-Oct-2011 10:20:55.879 xfer-out: info: client 176.9.232.129#58615: transfer of 'alienvault.org/IN': AXFR-style IXFR ended
event_type=event
regexp="(\S+\s+\d+\s+\d\d:\d\d:\d\d\s+(?P<dst>\S+).*\s+)?(?P<date>\d{1,2}-\w{3}-\d{4} \d{2}:\d{2}:\d{2}).\d+\s+xfer-out: (?P<level>\w+):?\s+client\s+(?P<src_ip>\d+.\d+.\d+.\d+)\#(?P<src_port>\d+).*\'(?P<domain_name>\S+)\':.*\wXFR (?P<status>\w+):?"
date={normalize_date($date)}
src_ip={resolv($src_ip)}
src_port={$src_port}
dst_ip={resolv($dst)}
plugin_sid={translate($status)}
userdata1={$level}
userdata2={$domain_name}

[08 - Bind - xfer-out bad zone transfer]
#18-Jul-2011 07:35:43.088 xfer-out: info: client 130.206.1.3#54811: bad zone transfer request: 'lala.net/IN': non-authoritative zone (NOTAUTH)
event_type=event
regexp="(\S+\s+\d+\s+\d\d:\d\d:\d\d\s+(?P<dst>\S+).*\s+)?(?P<date>\d{1,2}-\w{3}-\d{4} \d{2}:\d{2}:\d{2}).\d+\s+xfer-out: (?P<level>\w+):?\s+client\s+(?P<src_ip>\d+.\d+.\d+.\d+)\#(?P<src_port>\d+): bad zone transfer request: \'(?P<domain_name>\S+)\'.*"
date={normalize_date($date)}
src_ip={resolv($src_ip)}
src_port={$src_port}
dst_ip={resolv($dst)}
plugin_sid=80
userdata1={$level}

[09 - Bind - Notify - sending notifies]
#Oct 24 19:37:43 ns0 named[16263]: 24-Oct-2011 19:37:43.565 notify: info: zone ossim.net/IN: sending notifies (serial 2011102401)
#13-Aug-2011 11:58:55.789 notify: info: zone zone-limit.com/IN: sending notifies (serial 2011081301)
event_type=event
regexp="(\S+\s+\d+\s+\d\d:\d\d:\d\d\s+(?P<dst>\S+).*\s+)?(?P<date>\d{1,2}-\w{3}-\d{4} \d{2}:\d{2}:\d{2}).\d+\s+notify: (?P<level>\w+):?\s+zone (?P<zone>\S+): sending notifies"
date={normalize_date($date)}
dst_ip={resolv($dst)}
plugin_sid=76
userdata1={$level}
userdata2={$zone}

[10 - Bind - Notify - question]
#Oct 25 12:36:30 ns0 named[16263]: 25-Oct-2011 12:36:30.681 notify: notice: client 149.20.54.107#59341: notify question section contains no SOA
#13-Aug-2011 11:57:10.798 notify: info: client 188.165.232.19#34795: received notify for zone 'demo.com': TSIG 'transfer'
event_type=event
regexp="(\S+\s+\d+\s+\d\d:\d\d:\d\d\s+(?P<dst>\S+).*\s+)?(?P<date>\d{1,2}-\w{3}-\d{4} \d{2}:\d{2}:\d{2}).\d+\s+notify: (?P<level>\w+):? client (?P<src_ip>\d+.\d+.\d+.\d+)#(?P<src_port>\d+): (?P<trans>\w+\s\w+)"
date={normalize_date($date)}
dst_ip={resolv($dst)}
src_ip={resolv($src_ip)}
src_port={$src_port}
plugin_sid={translate($trans)}
userdata1={$level}

[11 - Bind - xfer-in]
#Nov  2 00:20:34 ns1 named[1448]: 02-Nov-2011 00:20:34.610 xfer-in: info: transfer of 'alienvault.com/IN' from 176.9.232.145#53: connected using 176.9.232.129#47678
#Nov  2 00:20:34 ns1 named[1448]: 02-Nov-2011 00:20:34.624 xfer-in: info: transfer of 'alienvault.com/IN' from 176.9.232.145#53: Transfer completed: 1 messages, 78 records, 2025 bytes, 0.013 secs (155769 bytes/sec)
event_type=event
regexp="(\S+\s+\d+\s+\d\d:\d\d:\d\d\s+(?P<dst>\S+).*\s+)?(?P<date>\d{1,2}-\w{3}-\d{4} \d{2}:\d{2}:\d{2}).\d+\s+xfer-in: (?P<level>\w+):? transfer of \'(?P<domain>\S+)\' from (?P<src_ip>\d+.\d+.\d+.\d+)#(?P<src_port>\d+):.*"
date={normalize_date($date)}
dst_ip={resolv($dst)}
src_ip={resolv($src_ip)}
src_port={$src_port}
plugin_sid=1024
userdata1={$level}

# Bind "Succesful Zone Transfer (AFXR) " 
[12 - bind-success-afxr]
event_type=event
regexp="(\S+\s+\d+\s+\d\d:\d\d:\d\d\s+(?P<dst>\S+)\s+.)?(?P<date>\d+-\S+-\d{4}).*approved AXFR from \[?(?P<src_ip>\d+.\d+.\d+.\d+)\]?\.(?P<src_port>\d+)"
date={normalize_date($date)}
src_ip={resolv($src_ip)}
src_port={$src_port}
dst_ip={resolv($dst)}
plugin_sid=1

# Bind "Bad Referal" 
[13 - bind-bad-referal]
event_type=event
regexp="(\S+\s+\d+\s+\d\d:\d\d:\d\d\s+(?P<dst>\S+)\s+.)?(?P<date>\d+-\S+-\d{4}).*bad referral .+ from \[?(?P<src_ip>\d+.\d+.\d+.\d+)\]?\.(?P<src_port>\d+)"
date={normalize_date($date)}
src_ip={resolv($src_ip)}
src_port={$src_port}
dst_ip={resolv($dst)}
plugin_sid=2

# Bind "Bad Response to SOA Query" 
[14 - bind-bad-response]
event_type=event
regexp="(\S+\s+\d+\s+\d\d:\d\d:\d\d\s+(?P<dst>\S+)\s+.)?(?P<date>\d+-\S+-\d{4}).*bad response .+ from (?P<src_ip>\d+.\d+.\d+.\d+)"
date={normalize_date($date)}
src_ip={resolv($src_ip)}
dst_ip={resolv($dst)}
plugin_sid=3

# Bind "Interface Deleted due to listenig error" 
[15 - bind-interface-deleted]
event_type=event
regexp="(\S+\s+\d+\s+\d\d:\d\d:\d\d\s+(?P<dst>\S+)\s+.)?(?P<date>\d+-\S+-\d{4}).*deleting interface \[?(?P<src_ip>\d+.\d+.\d+.\d+)\]?\.(?P<src_port>\d+)"
date={normalize_date($date)}
src_ip={resolv($src_ip)}
src_port={$src_port}
dst_ip={resolv($dst)}
plugin_sid=4

# Bind "Denied AXFR - equivalent to unapprouved" 
[16 - bind-denied-axfr]
event_type=event
regexp="(\S+\s+\d+\s+\d\d:\d\d:\d\d\s+(?P<dst>\S+)\s+.)?(?P<date>\d+-\S+-\d{4}).*denied AXFR from \[?(?P<src_ip>\d+.\d+.\d+.\d+)\]?\.(?P<src_port>\d+)"
date={normalize_date($date)}
src_ip={resolv($src_ip)}
src_port={$src_port}
dst_ip={resolv($dst)}
plugin_sid=5

# Bind "Denied Update Command - equivalent to unapprouved" 
[17 - bind-denied-update]
event_type=event
regexp="(\S+\s+\d+\s+\d\d:\d\d:\d\d\s+(?P<dst>\S+)\s+.)?(?P<date>\d+-\S+-\d{4}).*denied update from \[?(?P<src_ip>\d+.\d+.\d+.\d+)\]?\.(?P<src_port>\d+)"
date={normalize_date($date)}
src_ip={resolv($src_ip)}
src_port={$src_port}
dst_ip={resolv($dst)}
plugin_sid=6

# Bind "Drop source port zero packet" 
[18 - bind-drop-srcport-zero]
event_type=event
regexp="(\S+\s+\d+\s+\d\d:\d\d:\d\d\s+(?P<dst>\S+)\s+.)?(?P<date>\d+-\S+-\d{4}).*dropping source port zero packet from \[?(?P<src_ip>\d+.\d+.\d+.\d+)\]?\.(?P<src_port>\d+)"
date={normalize_date($date)}
src_ip={resolv($src_ip)}
src_port={$src_port}
dst_ip={resolv($dst)}
plugin_sid=7

# Bind "Update error due to existing record" 
[19 - bind-error-update]
event_type=event
regexp="(\S+\s+\d+\s+\d\d:\d\d:\d\d\s+(?P<dst>\S+)\s+.)?(?P<date>\d+-\S+-\d{4}).*error processing update packet .+ from \[?(?P<src_ip>\d+.\d+.\d+.\d+)\]?\.(?P<src_port>\d+)"
date={normalize_date($date)}
src_ip={resolv($src_ip)}
src_port={$src_port}
dst_ip={resolv($dst)}
plugin_sid=8

# Bind "TCP based query or zone transfer" 
[20 - bind-tcp-connection]
event_type=event
regexp="(\S+\s+\d+\s+\d\d:\d\d:\d\d\s+(?P<dst>\S+)\s+.)?(?P<date>\d+-\S+-\d{4}).*IP\/TCP connection from \[?(?P<src_ip>\d+.\d+.\d+.\d+)\]?\.(?P<src_port>\d+)"
date={normalize_date($date)}
src_ip={resolv($src_ip)}
src_port={$src_port}
dst_ip={resolv($dst)}
plugin_sid=9

# Bind "Lame server: remote name server not authoritative for domain" 
[21 - bind-lame-server]
event_type=event
regexp="(\S+\s+\d+\s+\d\d:\d\d:\d\d\s+(?P<dst>\S+)\s+.)?(?P<date>\d+-\S+-\d{4}).*Lame server on .+ \[?(?P<src_ip>\d+.\d+.\d+.\d+)\]?\.(?P<src_port>\d+)"
date={normalize_date($date)}
src_ip={resolv($src_ip)}
src_port={$src_port}
dst_ip={resolv($dst)}
plugin_sid=10

# Bind "Malformed Response" 
[22 - bind-malformed-response]
event_type=event
regexp="(\S+\s+\d+\s+\d\d:\d\d:\d\d\s+(?P<dst>\S+)\s+.)?(?P<date>\d+-\S+-\d{4}).*Malformed response from \[?(?P<src_ip>\d+.\d+.\d+.\d+)\]?\.(?P<src_port>\d+)"
date={normalize_date($date)}
src_ip={resolv($src_ip)}
src_port={$src_port}
dst_ip={resolv($dst)}
plugin_sid=11

# Bind "Query for unknown class" 
[23 - bind-unknown-class]
event_type=event
regexp="(\S+\s+\d+\s+\d\d:\d\d:\d\d\s+(?P<dst>\S+)\s+.)?(?P<date>\d+-\S+-\d{4}).*client (?P<src_ip>\d+.\d+.\d+.\d+)\#(?P<src_port>\d+): no matching view in class .+"
date={normalize_date($date)}
src_ip={resolv($src_ip)}
src_port={$src_port}
dst_ip={resolv($dst)}
plugin_sid=12

# Bind "NOTIFY(SOA): propably domain name is not the good one for the specified zone" 
[24 - bind-notify-soa-non-origin]
event_type=event
regexp="(\S+\s+\d+\s+\d\d:\d\d:\d\d\s+(?P<dst>\S+)\s+.)?(?P<date>\d+-\S+-\d{4}).*NOTIFY\(SOA\) for non-origin.+ from \[?(?P<src_ip>\d+.\d+.\d+.\d+)\]?\.(?P<src_port>\d+)"
date={normalize_date($date)}
src_ip={resolv($src_ip)}
src_port={$src_port}
dst_ip={resolv($dst)}
plugin_sid=13

# Bind "NOTIFY(SOA): local name server not slave for specified zone: unexpected message"
[25 - bind-notify-soa-non-secondary]
event_type=event
regexp="(\S+\s+\d+\s+\d\d:\d\d:\d\d\s+(?P<dst>\S+)\s+.)?(?P<date>\d+-\S+-\d{4}).*NOTIFY\(SOA\) for non-secondary name.+ from \[?(?P<src_ip>\d+.\d+.\d+.\d+)\]?\.(?P<src_port>\d+)"
date={normalize_date($date)}
src_ip={resolv($src_ip)}
src_port={$src_port}
dst_ip={resolv($dst)}
plugin_sid=14

# Bind "NOTIFY(SOA): remote IP is not master server for the specified zone: unexpected message"
[26 - bind-notify-soa-non-master]
event_type=event
regexp="(\S+\s+\d+\s+\d\d:\d\d:\d\d\s+(?P<dst>\S+)\s+.)?(?P<date>\d+-\S+-\d{4}).*NOTIFY\(SOA\) from non-master server.+ from \[?(?P<src_ip>\d+.\d+.\d+.\d+)\]?\.(?P<src_port>\d+)"
date={normalize_date($date)}
src_ip={resolv($src_ip)}
src_port={$src_port}
dst_ip={resolv($dst)}
plugin_sid=15

# Bind "NS Operation: Network Unreachable"
[27 - bind-forward-net-unreachable]
event_type=event
regexp="(\S+\s+\d+\s+\d\d:\d\d:\d\d\s+(?P<dst>\S+)\s+.)?(?P<date>\d+-\S+-\d{4}).*ns_\S+: sendto\(\[?(?P<src_ip>\d+.\d+.\d+.\d+)\]?\.(?P<src_port>\d+)\): Network is unreachable"
date={normalize_date($date)}
src_ip={resolv($src_ip)}
src_port={$src_port}
dst_ip={resolv($dst)}
plugin_sid=16

# Bind "NS Operation: Operation not permitted"
[28 - bind-forward-op-not-permitted]
event_type=event
regexp="(\S+\s+\d+\s+\d\d:\d\d:\d\d\s+(?P<dst>\S+)\s+.)?(?P<date>\d+-\S+-\d{4}).*ns_\S+: sendto\(\[?(?P<src_ip>\d+.\d+.\d+.\d+)\]?\.(?P<src_port>\d+)\): Operation not permitted"
date={normalize_date($date)}
src_ip={resolv($src_ip)}
src_port={$src_port}
dst_ip={resolv($dst)}
plugin_sid=17

# Bind "NS Operation: Resource temporarily unavailable"
[29 - bind-forward-resource-unavailable]
event_type=event
regexp="(\S+\s+\d+\s+\d\d:\d\d:\d\d\s+(?P<dst>\S+)\s+.)?(?P<date>\d+-\S+-\d{4}).*ns_\S+: sendto\(\[?(?P<src_ip>\d+.\d+.\d+.\d+)\]?\.(?P<src_port>\d+)\): Resource temporarily unavailable"
date={normalize_date($date)}
src_ip={resolv($src_ip)}
src_port={$src_port}
dst_ip={resolv($dst)}
plugin_sid=18

# Bind "NS Operation: Connection refused"
[30 - bind-request-connection-refused]
event_type=event
regexp="(\S+\s+\d+\s+\d\d:\d\d:\d\d\s+(?P<dst>\S+)\s+.)?(?P<date>\d+-\S+-\d{4}).*ns_\S+: sendto\(\[?(?P<src_ip>\d+.\d+.\d+.\d+)\]?\.(?P<src_port>\d+)\): Connection refused"
date={normalize_date($date)}
src_ip={resolv($src_ip)}
src_port={$src_port}
dst_ip={resolv($dst)}
plugin_sid=19

# Bind "NS Operation: No buffer space available"
[31 - bind-request-no-buffer]
event_type=event
regexp="(\S+\s+\d+\s+\d\d:\d\d:\d\d\s+(?P<dst>\S+)\s+.)?(?P<date>\d+-\S+-\d{4}).*ns_\S+: sendto\(\[?(?P<src_ip>\d+.\d+.\d+.\d+)\]?\.(?P<src_port>\d+)\): No buffer space available"
date={normalize_date($date)}
src_ip={resolv($src_ip)}
src_port={$src_port}
dst_ip={resolv($dst)}
plugin_sid=20

# Bind "NS Operation: All possible Records are Lame"
[32 - bind-response-unexisting-name-server]
event_type=event
regexp="(\S+\s+\d+\s+\d\d:\d\d:\d\d\s+(?P<dst>\S+)\s+.)?(?P<date>\d+-\S+-\d{4}).*ns_\S+: query\((?P<src_ip>\d+.\d+.\d+.\d+).in.+\) All possible .+ lame"
date={normalize_date($date)}
src_ip={resolv($src_ip)}
dst_ip={resolv($dst)}
plugin_sid=21

# Bind "NS Operation: Remote server already cached as unexisting"
[33 - bind-operation-all-lame]
event_type=event
regexp="(\S+\s+\d+\s+\d\d:\d\d:\d\d\s+(?P<dst>\S+)\s+.)?(?P<date>\d+-\S+-\d{4}).*ns_resp: query\((?P<src_ip>\d+.\d+.\d+.\d+).in.+\).+"
date={normalize_date($date)}
src_ip={resolv($src_ip)}
dst_ip={resolv($dst)}
plugin_sid=22

# Bind "NS Operation: Bogus Loopback"
[34 - bind-bogus-loopback]
event_type=event
regexp="(\S+\s+\d+\s+\d\d:\d\d:\d\d\s+(?P<dst>\S+)\s+.)?(?P<date>\d+-\S+-\d{4}).*ns_\S+: query\((?P<src_ip>\d+.\d+.\d+.\d+).in.+\) Bogus LOOPBACK.+"
date={normalize_date($date)}
src_ip={resolv($src_ip)}
dst_ip={resolv($dst)}
plugin_sid=23

# Bind "NS Operation: no possible A record"
[35 - bind-no-possible-record]
event_type=event
regexp="(\S+\s+\d+\s+\d\d:\d\d:\d\d\s+(?P<dst>\S+)\s+.)?(?P<date>\d+-\S+-\d{4}).*ns_\S+: query\((?P<src_ip>\d+.\d+.\d+.\d+).in.+\) No possible A.+"
date={normalize_date($date)}
src_ip={resolv($src_ip)}
dst_ip={resolv($dst)}
plugin_sid=24

# Bind "Remote Name server known by multiple domains"
[36 - bind-server-name-mismatch]
event_type=event
regexp="(\S+\s+\d+\s+\d\d:\d\d:\d\d\s+(?P<dst>\S+)\s+.)?(?P<date>\d+-\S+-\d{4}).*ns_\S+: server name mismatch for \[(?P<src_ip>\d+.\d+.\d+.\d+)\]: .+"
date={normalize_date($date)}
src_ip={resolv($src_ip)}
dst_ip={resolv($dst)}
plugin_sid=25

# Bind "TCP packet truncated"
[37 - bind-tcp-truncated]
event_type=event
regexp="(\S+\s+\d+\s+\d\d:\d\d:\d\d\s+(?P<dst>\S+)\s+.)?(?P<date>\d+-\S+-\d{4}).*ns_\S+: TCP truncated.+ \[(?P<src_ip>\d+.\d+.\d+.\d+)\].(?P<src_port>\d+).+"
date={normalize_date($date)}
src_ip={resolv($src_ip)}
src_port={$src_port}
dst_ip={resolv($dst)}
plugin_sid=26

# Bind "Remote Name server restricting zone transfer"
[38 - bind-zone-transfer-restricted]
event_type=event
regexp="(\S+\s+\d+\s+\d\d:\d\d:\d\d\s+(?P<dst>\S+)\s+.)?(?P<date>\d+-\S+-\d{4}).*record too short from \[(?P<src_ip>\d+.\d+.\d+.\d+)\].+"
date={normalize_date($date)}
src_ip={resolv($src_ip)}
dst_ip={resolv($dst)}
plugin_sid=27

# Bind "Query received on non-query socket"
[39 - bind-query-on-non-query-socket]
event_type=event
regexp="(\S+\s+\d+\s+\d\d:\d\d:\d\d\s+(?P<dst>\S+)\s+.)?(?P<date>\d+-\S+-\d{4}).*refused query on non-query socket from \[(?P<src_ip>\d+.\d+.\d+.\d+)\].(?P<src_port>\d+)"
date={normalize_date($date)}
src_ip={resolv($src_ip)}
src_port={$src_port}
dst_ip={resolv($dst)}
plugin_sid=28

# Bind "Response received from a Name Server not queried"
[40 - bind-response-unexpected]
event_type=event
regexp="(\S+\s+\d+\s+\d\d:\d\d:\d\d\s+(?P<dst>\S+)\s+.)?(?P<date>\d+-\S+-\d{4}).*[Rr]esponse from unexpected source \(\[(?P<src_ip>\d+.\d+.\d+.\d+)\].(?P<src_port>\d+)\)"
date={normalize_date($date)}
src_ip={resolv($src_ip)}
src_port={$src_port}
dst_ip={resolv($dst)}
plugin_sid=29

# Bind "Response from remote server out of time (more than 10 min"
[41 - bind-response-badtime]
event_type=event
regexp="(\S+\s+\d+\s+\d\d:\d\d:\d\d\s+(?P<dst>\S+)\s+.)?(?P<date>\d+-\S+-\d{4}).*SOA TSIG verification from server \[(?P<src_ip>\d+.\d+.\d+.\d+)\].+BADTIME"
date={normalize_date($date)}
src_ip={resolv($src_ip)}
dst_ip={resolv($dst)}
plugin_sid=30

# Bind "Zone transfer denied due to local ACL"
[42 - bind-zone-transfer-denied-acl]
event_type=event
regexp="(\S+\s+\d+\s+\d\d:\d\d:\d\d\s+(?P<dst>\S+)\s+.)?(?P<date>\d+-\S+-\d{4}).*unapproved AXFR from \[(?P<src_ip>\d+.\d+.\d+.\d+)\].(?P<src_port>\d+).+ \(acl\)"
date={normalize_date($date)}
src_ip={resolv($src_ip)}
src_port={$src_port}
dst_ip={resolv($dst)}
plugin_sid=31

# Bind "Zone transfer denied because local server is not authoritative for the specified zone"
[43 - bind-zone-transfer-denied-master]
event_type=event
regexp="(\S+\s+\d+\s+\d\d:\d\d:\d\d\s+(?P<dst>\S+)\s+.)?(?P<date>\d+-\S+-\d{4}).*unapproved AXFR from \[(?P<src_ip>\d+.\d+.\d+.\d+)\].(?P<src_port>\d+).+ \(not master.+\)"
date={normalize_date($date)}
src_ip={resolv($src_ip)}
src_port={$src_port}
dst_ip={resolv($dst)}
plugin_sid=32

# Bind "Zone transfer denied because remote domain is not top of the zone"
[44 - bind-zone-transfer-denied-not-top]
event_type=event
regexp="(\S+\s+\d+\s+\d\d:\d\d:\d\d\s+(?P<dst>\S+)\s+.)?(?P<date>\d+-\S+-\d{4}).*unapproved AXFR from \[(?P<src_ip>\d+.\d+.\d+.\d+)\].(?P<src_port>\d+).+ \(not zone top\)"
date={normalize_date($date)}
src_ip={resolv($src_ip)}
src_port={$src_port}
dst_ip={resolv($dst)}
plugin_sid=33

# Bind "Zone transfer denied because of a syntax error or an illegal domain name"
[45 - bind-zone-transfer-denied-syntax]
event_type=event
regexp="(\S+\s+\d+\s+\d\d:\d\d:\d\d\s+(?P<dst>\S+)\s+.)?(?P<date>\d+-\S+-\d{4}).*unapproved AXFR from \[(?P<src_ip>\d+.\d+.\d+.\d+)\].(?P<src_port>\d+).+ \(not auth\)"
date={normalize_date($date)}
src_ip={resolv($src_ip)}
src_port={$src_port}
dst_ip={resolv($dst)}
plugin_sid=34

# Bind "Unapproved Recursive Query"
[46 - bind-unapproved-recursive]
event_type=event
regexp="(\S+\s+\d+\s+\d\d:\d\d:\d\d\s+(?P<dst>\S+)\s+.)?(?P<date>\d+-\S+-\d{4}).*unapproved recursive query from \[(?P<src_ip>\d+.\d+.\d+.\d+)\].(?P<src_port>\d+).+"
date={normalize_date($date)}
src_ip={resolv($src_ip)}
src_port={$src_port}
dst_ip={resolv($dst)}
plugin_sid=35

# Bind "Unapproved Update Query"
[47 - bind-unapproved-update]
event_type=event
regexp="(\S+\s+\d+\s+\d\d:\d\d:\d\d\s+(?P<dst>\S+)\s+.)?(?P<date>\d+-\S+-\d{4}).*unapproved update from \[(?P<src_ip>\d+.\d+.\d+.\d+)\].(?P<src_port>\d+).+"
date={normalize_date($date)}
src_ip={resolv($src_ip)}
src_port={$src_port}
dst_ip={resolv($dst)}
plugin_sid=36

# Bind "Unrelated additional info for domain in response"
[48 - bind unrelated-info]
event_type=event
regexp="(\S+\s+\d+\s+\d\d:\d\d:\d\d\s+(?P<dst>\S+)\s+.)?(?P<date>\d+-\S+-\d{4}).*unrelated additional info .+ \[(?P<src_ip>\d+.\d+.\d+.\d+)\].(?P<src_port>\d+)"
date={normalize_date($date)}
src_ip={resolv($src_ip)}
src_port={$src_port}
dst_ip={resolv($dst)}
plugin_sid=37

# Bind "Zone Transfer Successful"
[49 - bind-zone-transfer-success]
event_type=event
regexp="(\S+\s+\d+\s+\d\d:\d\d:\d\d\s+(?P<dst>\S+)\s+.)?(?P<date>\d+-\S+-\d{4}).*zone transfer \(AXFR\) .+ \[(?P<src_ip>\d+.\d+.\d+.\d+)\].(?P<src_port>\d+)"
date={normalize_date($date)}
src_ip={resolv($src_ip)}
src_port={$src_port}
dst_ip={resolv($dst)}
plugin_sid=38

# Bind "Zone Transfer Refused"
[50 - bind zone-transfer-refused]
event_type=event
regexp="(\S+\s+\d+\s+\d\d:\d\d:\d\d\s+(?P<dst>\S+)\s+.)?\s+named.*: transfer of\s+\'(?P<info>\S+)'\sfrom\s+(?P<src_ip>\d+.\d+.\d+.\d+)\#(?P<src_port>\d+):\s+failed while receiving responses: REFUSED"
date={normalize_date($date)}
dst_ip={resolv($dst)}
src_ip={resolv($src_ip)}
src_port={$src_port}
plugin_sid=44
userdata1={$info}

# Bind "Zone Transfer Timeout"
[51 - bind-zone-transfer-timeout]
event_type=event
regexp="(\S+\s+\d+\s+\d\d:\d\d:\d\d\s+(?P<dst>\S+)\s+.)?(?P<date>\d+-\S+-\d{4}).*zone transfer timeout.+"
date={normalize_date($date)}
dst_ip={resolv($dst)}
plugin_sid=39

# Bind "Zone Transfer - Master server unreachable"
[52 - bind-name-server-unreachable]
event_type=event
regexp="(\S+\s+\d+\s+\d\d:\d\d:\d\d\s+(?P<dst>\S+)\s+.)?(?P<date>\d+-\S+-\d{4}).*zoneref: Masters for secondary zone.+unreachable"
date={normalize_date($date)}
dst_ip={resolv($dst)}
plugin_sid=40

# Bind "Secondary zone expired - unable to refresh zone data"
[53 - bind-name-server-unreachable]
event_type=event
regexp="(\S+\s+\d+\s+\d\d:\d\d:\d\d\s+(?P<dst>\S+)\s+.)?(?P<date>\d+-\S+-\d{4}).*secondary zone.+expired"
date={normalize_date($date)}
dst_ip={resolv($dst)}
plugin_sid=41

# tested using Bind 9.5.0
[54 - bind-too-many-timeouts]
event_type=event
regexp="(\S+\s+\d+\s+\d\d:\d\d:\d\d\s+(?P<dst>\S+)\s+.)?(?P<date>\S+\s+\S+)\.\d+\s+.*(?P<level>[^:]+):\s*too many timeouts resolving '(?P<query_domain>[^']*)'\s*\(in\s+'(?P<top_domain>[^']*)'"
date={normalize_date($date)}
dst_ip={resolv($dst)}
plugin_sid=1000
userdata1={$classification}
userdata2={$level}
userdata3={$query_domain}
userdata4={$top_domain}

[55 - bind-query-cache-denied]
event_type=event
regexp="(\S+\s+\d+\s+\d\d:\d\d:\d\d\s+(?P<dst>\S+)\s+.)?(?P<date>\S+\s+\S+)\.\d+\s+.*(?P<level>[^:]+):\s*client\s*(?P<src_ip>\d+\.\d+\.\d+\.\d+)#(?P<src_port>\d+):\s*query.*?'(?P<query_domain>[^']*)'\s*denied"
date={normalize_date($date)}
src_port={$src_port}
src_ip={resolv($src_ip)}
dst_ip={resolv($dst)}
plugin_sid=1001
userdata1={$classification}
userdata2={$level}
userdata3={$query_domain}

[56 - bind-FORMERR-resolving]
event_type=event
regexp="(\S+\s+\d+\s+\d\d:\d\d:\d\d\s+(?P<dst>\S+)\s+.)?(?P<date>\S+\s+\S+)\.\d+\s+.*(?P<level>[^:]+):\s*FORMERR\s*resolving\s*'(?P<query_domain>[^']*)':\s+(?P<dst_ip>\d+\.\d+\.\d+\.\d+)#(?P<dst_port>\d+)"
date={normalize_date($date)}
dst_ip={$dst_ip}
dst_port={$dst_port}
plugin_sid=1002
userdata1={$classification}
userdata2={$level}
userdata3={$query_domain}

[57 - bind-RFC1918-response]
event_type=event
regexp="(\S+\s+\d+\s+\d\d:\d\d:\d\d\s+(?P<dst>\S+)\s+.)?(?P<date>\S+\s+\S+)\.\d+\s+.*(?P<level>[^:]+):\s*client\s*(?P<src_ip>\d+\.\d+\.\d+\.\d+)#(?P<src_port>\d+):\s*RFC\s*1918\s*response\s*from\s*\S+\s*for\s*(?P<query_domain>\S*)"
date={normalize_date($date)}
src_ip={resolv($src_ip)}
src_port={$src_port}
plugin_sid=1003
userdata1={$classification}
userdata2={$level}
userdata3={$query_domain}

[58 - bind-checkhints]
event_type=event
regexp="(\S+\s+\d+\s+\d\d:\d\d:\d\d\s+(?P<dst>\S+)\s+.)?(?P<date>\S+\s+\S+)\.\d+\s+.*(?P<level>[^:]+):\s*checkhints:\s+(?P<query_domain>\S+)\s+\((?P<dst_ip>\S+)\).*hints"
date={normalize_date($date)}
dst_ip={$dst_ip}
plugin_sid=1004
userdata1={$classification}
userdata2={$level}
userdata3={$query_domain}

[59 - bind-unexpected-RCODE]
event_type=event
regexp="(\S+\s+\d+\s+\d\d:\d\d:\d\d\s+(?P<dst>\S+)\s+.)?(?P<date>\S+\s+\S+)\.\d+\s+.*(?P<level>[^:]+):\s*unexpected\s*RCODE\s*\((?P<rcode>.*?)\)\s*resolving\s*'(?P<query_domain>[^']*)':\s+(?P<dst_ip>\d+\.\d+\.\d+\.\d+)#(?P<dst_port>\d+)"
date={normalize_date($date)}
dst_port={$dst_port}
dst_ip={$dst_ip}
plugin_sid=1005
userdata1={$classification}
userdata2={$level}
userdata3={$query_domain}
userdata5={$rcode}

[60 - bind-lame-server-resolving]
event_type=event
regexp="(\S+\s+\d+\s+\d\d:\d\d:\d\d\s+(?P<dst>\S+)\s+.)?(?P<date>\S+\s+\S+)\.\d+\s+.*(?P<level>[^:]+):\s*lame server resolving '(?P<query_domain>[^']*)'\s*\(in\s+'(?P<top_domain>[^']*)'"
date={normalize_date($date)}
plugin_sid=1006
userdata1={$classification}
userdata2={$level}
userdata3={$query_domain}
userdata4={$top_domain}

# Bind sending notifies
[61 - bind - sending-notifies]
#Jan  7 08:10:25 fastfoot-ng named[5124]: zone locolandia.ath.cx/IN: sending notifies (serial 2009171996)
event_type=event
regexp="(\S+\s+\d+\s+\d\d:\d\d:\d\d\s+(?P<dst>\S+)\s+.)?.*zone\s+(?P<zone>\S+)\s+sending notifies.*\(serial\s+(?P<serial>\d+)\)"
date={normalize_date($date)}
dst_ip={resolv($dst)}
plugin_sid=45
userdata1={$zone}
userdata2={$serial}

[62 - bind-updating-zone]
#Jan  7 08:10:25 fastfoot-ng named[5124]: client 192.168.23.23#53162: updating zone 'locolandia.ath.cx/IN': adding an RR at 'android_5aa155aa59c9f9aa.locolandia.ath.cx' A
#Sep 15 01:04:52 fastfoot-ng named[4584]: client 192.168.23.23#38578: updating zone 'locolandia.ath.cx/IN': deleting an RR
#Sep 15 00:02:51 fastfoot-ng named[4584]: client 192.168.23.23#38569: updating zone '23.168.192.in-addr.arpa/IN': deleting rrset at '199.23.168.192.in-addr.arpa' PTR
event_type=event
regexp="(\S+\s+\d+\s+\d\d:\d\d:\d\d)\s+(?P<dst>\S+)\s+named.*client\s+(?P<src_ip>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}).*:\s+updating zone\s+\'(?P<zone>\S+)\':\s+(?P<type>adding\san\sRR\sat|deleting\san\sRR|deleting\srrset\sat)\s*\'?(?P<reg>\S+)?\s*(?P<regtype>\S+)?"
date={normalize_date($date)}
dst_ip={resolv($dst)}
src_ip={resolv($src_ip)}
plugin_sid={translate($type)}
userdata1={$reg}
userdata2={$regtype}

[63 - bind-error-updating-zone]
#Nov 22 07:06:24 fastfoot-ng named[5165]: client 192.168.23.23#53450: updating zone 'locolandia.ath.cx/IN': update unsuccessful: fishbull.locolandia.ath.cx: 'name not in use' prerequisite not satisfied (YXDOMAIN)
#Nov 22 07:06:24 fastfoot-ng named[5165]: client 192.168.23.23#60440: updating zone 'locolandia.ath.cx/IN': update unsuccessful: fishbull.locolandia.ath.cx/TXT: 'RRset exists (value dependent)' prerequisite not satisfied (NXRRSET)
event_type=event
regexp="(\S+\s+\d+\s+\d\d:\d\d:\d\d)\s+(?P<dst>\S+)\s+named.*client\s+(?P<src_ip>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}).*:\s+updating zone\s+\'(?P<zone>\S+)\':\s+update\s+unsuccessful:\s+(?P<reg>\S+):\s\'(?P<type>.+)\'.*"
date={normalize_date($date)}
dst_ip={resolv($dst)}
src_ip={resolv($src_ip)}
plugin_sid={translate($type)}
userdata1={$reg}

[99 - Bind - Generic event]
#Oct 25 13:05:03 ns0 named[16263]: 25-Oct-2011 13:05:03.203 type: severity:
event_type=event
regexp="(\S+\s+\d+\s+\d\d:\d\d:\d\d\s+(?P<dst>\S+).*\s+)?(?P<date>\d{1,2}-\w{3}-\d{4} \d{2}:\d{2}:\d{2})\.\d+\s+(?P<type>\w+):( (?P<level>\w+):)?"
date={normalize_date($date)}
dst_ip={resolv($dst)}
plugin_sid={translate($type)}
userdata1={$level}
